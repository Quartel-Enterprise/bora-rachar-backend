openapi: 3.0.0
info:
  title: bora-rachar-service
  description: servico responsavel por prover dados para o app bora-rachar
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
paths:
  /screens/login:
    post:
      tags:
        - Screens
      description: "login endpoint"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoLoginResponse'

  /screens/activities:
    get:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/user-id-header'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesScreenResponse'

  /screens/groups:
    get:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/user-id-header'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsScreenResponse'
    post:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/user-id-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsScreenRequestBody'
      responses:
        '201':
          description: "created"

  /screens/groups/{groupId}:
    get:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/user-id-header'
        - in: path
          name: groupId
          required: true
          schema:
            type: string
            example: "groupId"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetailsScreenResponse'

  /screens/expenses:
    post:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/user-id-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseScreenRequestBody'
      responses:
        '201':
          description: Created

  /screens/expenses/{expenseId}:
    put:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/user-id-header'
        - in: path
          name: expenseId
          required: true
          schema:
            type: string
            example: "expenseId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseScreenRequestBody'
      responses:
        '200':
          description: ok
    delete:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/user-id-header'
        - in: path
          name: expenseId
          required: true
          schema:
            type: string
            example: "expenseId"
      responses:
        '200':
          description: ok

  /screens/contacts:
    get:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/user-id-header'
        - in: header
          name: access-code
          required: true
          schema:
            type: string
            example: "code"
        - in: header
          name: refresh-token
          required: true
          schema:
            type: string
            example: "refresh-token"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsScreenResponse'
    post:
      tags:
        - Screens
      parameters:
        - $ref: '#/components/parameters/user-id-header'
        - in: header
          name: access-code
          required: true
          schema:
            type: string
            example: "code"
        - in: header
          name: refresh-token
          required: true
          schema:
            type: string
            example: "refresh-token"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactsScreenRequestBody'
      responses:
        '201':
          description: Created
  /screens/groups/{expenseId}/commentary:
    post:
      tags:
        - Screens
      parameters:
        - in: path
          name: expenseId
          required: true
          schema:
            type: string
            example: "expenseId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCommentRequestBody'
      responses:
        '200':
          description: ok

components:
  schemas:
    Pagination:
      properties:
        totalRecords:
          type: number
          example: 100
        currentPage:
          type: number
          example: 0
        totalPages:
          type: number
          example: 7
    LoginRequestBody:
      properties:
        code:
          type: string
          description: "access token that grants access to that API"
    InfoLoginResponse:
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        userId:
          type: string
    ActivitiesScreenResponse:
      properties:
        meta:
          $ref: '#/components/schemas/Pagination'
        balance:
          $ref: '#/components/schemas/SummaryBalance'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivitiesScreenActivities'
    ActivitiesScreenActivities:
      properties:
        type:
          type: string
          enum:
            - RECEIVED_PAYMENT
            - EXECUTED_PAYMENT
            - EXPENSE_PARTICIPATION
            - NEW_GROUP_PARTICIPANT
        userName:
          type: string
          example: "Thiago D."
        userId:
          type: string
          example: "userId"
        userPhoto:
          type: string
          example: "url"
        groupId:
          type: string
          example: "groupId"
        groupName:
          type: string
          example: "Quartel Otaku"
        groupPhoto:
          type: string
          example: "url"
        value:
          type: number
          example: 15.68
        date:
          type: string
          format: date-time
    SummaryBalance:
      properties:
        amountToPay:
          type: number
          example: 19.80
        amountToReceive:
          type: number
          example: 250
    GroupsScreenRequestBody:
      properties:
        name:
          type: string
          example: "Quartel Otaku"
        photo:
          type: string
          example: "link"
        participants:
          type: array
          items:
            properties:
              email:
                type: string
    GroupsScreenResponse:
      properties:
        balance:
          $ref: '#/components/schemas/SummaryBalance'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupsScreenGroup'
    GroupsScreenGroup:
      properties:
        groupId:
          type: string
          example: "id"
        groupName:
          type: string
          example: "Quartel Otaku"
        groupPhoto:
          type: string
          example: "link"
        amountToPay:
          type: number
          example: 19.80
        amountToReceive:
          type: number
          example: 250
        participants:
          type: array
          items:
            $ref: '#/components/schemas/GroupsScreenParticipant'
    GroupsScreenParticipant:
      properties:
        userName:
          type: string
          example: "Pierre"
        userId:
          type: string
          example: "userId"
        userPhoto:
          type: string
          example: "link"
    GroupDetailsScreenResponse:
      properties:
        meta:
          $ref: '#/components/schemas/Pagination'
        groupInfo:
          properties:
            id:
              type: string
              example: "id"
            name:
              type: string
              example: "Quartel Otaku"
            photo:
              type: string
              example: "link"
            participants:
              type: array
              items:
                properties:
                  userId:
                    type: string
                    example: "userId"
                  userName:
                    type: string
                    example: "Pierre"
                  userPhoto:
                    type: string
                    example: "link"
                  balance:
                    $ref: '#/components/schemas/GroupDetailsScreenBalance'
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/GroupDetailsScreenExpense'
    GroupDetailsScreenExpense:
      properties:
        id:
          type: string
          example: "expenseID"
        photo:
          type: string
          example: "link"
        description:
          type: string
          example: "Uber volta da escalada"
        category:
          $ref: '#/components/schemas/ExpenseCategory'
        createdBy:
          properties:
            userId:
              type: string
              example: "userId"
            userName:
              type: string
              example: "Pierre"
            userPhoto:
              type: string
              example: "link"
        createdAt:
          type: string
          format: date-time
        involved:
          type: array
          items:
            properties:
              userId:
                type: string
                example: "userId"
              userName:
                type: string
                example: "Pierre"
              userPhoto:
                type: string
                example: "link"
              balance:
                type: number
                example: 19.80
              isDebtSetted:
                type: boolean
                example: true
        commentary:
          type: array
          items:
            properties:
              userId:
                type: string
                example: "userId"
              userName:
                type: string
                example: "Pierre"
              userPhoto:
                type: string
                example: "link"
              commentary:
                type: string
                example: "vou pagar nao hehe"
              date:
                type: string
                format: date-time
    ExpenseCategory:
      type: string
      enum:
        - TRANSPORTATION
        - ENTERTAINMENT
        - FOOD
    GroupDetailsScreenBalance:
      properties:
        amountToPay:
          properties:
            value:
              type: number
              example: 9.90
            payTo:
              type: array
              items:
                properties:
                  userId:
                    type: string
                    example: "userId"
                  userName:
                    type: string
                    example: "Pierre"
                  userPhoto:
                    type: string
                    example: "link"
                  value:
                    type: number
                    example: 19.80
        amountToReceive:
          properties:
            value:
              type: number
              example: 9.90
            receiveFrom:
              type: array
              items:
                properties:
                  userId:
                    type: string
                    example: "userId"
                  userName:
                    type: string
                    example: "Pierre"
                  userPhoto:
                    type: string
                    example: "link"
                  value:
                    type: number
                    example: 19.80
    ExpenseCommentRequestBody:
      required:
        - userId
        - commentary
      properties:
        userId:
          type: string
          example: "userId"
        commentary:
          type: string
          example: "vou pagar nao hehe"
        date:
          type: string
          format: date-time

    ExpenseScreenRequestBody:
      required:
        - name
        - value
        - payers
        - participants
      properties:
        name:
          type: string
          example: "Uber para escalada"
        description:
          type: string
          example: "informacao mais detalhada sobre o gasto"
        category:
          $ref: '#/components/schemas/ExpenseCategory'
        value:
          type: number
          example: 15.49
        payers:
          type: array
          items:
            properties:
              userId:
                type: string
                example: "userId"
              value:
                type: string
                example: 15.69
        participants:
          type: array
          items:
            properties:
              userId:
                type: string
                example: "userId"
              value:
                type: string
                example: 15.69
    ContactsScreenResponse:
        properties:
          contacts:
            type: array
            items:
              properties:
                id:
                  type: string
                  example: "userId"
                name:
                  type: string
                  example: "Arrighi"
                email:
                  type: string
                  example: "arrighi@gmail.com"
                telefone:
                  type: string
                  example: "+5538999999999"
                value:
                  type: number
                  example: 14.99
    ContactsScreenRequestBody:
      properties:
        contacts:
          type: array
          items:
            properties:
              email:
                type: string
                example: "email@gmail.com"
              telefone:
                type: string
                example: "+5538999999999"

  parameters:
    limit:
      required: true
      in: query
      name: limit
      schema:
        type: integer
    page:
      required: true
      in: query
      name: page
      schema:
        type: integer
    user-id-header:
      in: header
      name: userId
      required: true
      schema:
        type: string
    
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []